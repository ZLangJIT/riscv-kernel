From 37ae3707f202641229bb5a8e9022d15ffb1235f0 Mon Sep 17 00:00:00 2001
From: root <root@localhost.localdomain>
Date: Mon, 30 Sep 2024 22:10:36 +0000
Subject: [PATCH 1/1] c

---
 src/rvjit/rvjit.c       | 8 ++++++++
 src/rvjit/rvjit_arm64.h | 1 -
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/rvjit/rvjit.c b/src/rvjit/rvjit.c
index 8ad74f8..dca6b8b 100644
--- a/src/rvjit/rvjit.c
+++ b/src/rvjit/rvjit.c
@@ -41,6 +41,11 @@ void sys_icache_invalidate(void* start, size_t len);
 #include <sys/syscall.h>
 #include <unistd.h>
 
+/*
+ * RISC-V currently has a "global icache flush" scheme so coalescing is preferred
+ */
+#define RVJIT_GLOBAL_ICACHE_FLUSH
+
 #elif defined(RVJIT_ARM64) && defined(GNU_EXTS)
 /*
  * Don't rely on GCC's __clear_cache implementation, as it may
@@ -263,6 +268,9 @@ rvjit_func_t rvjit_block_finalize(rvjit_block_t* block)
         vector_foreach(*linked_blocks, i) {
             uint8_t* jptr = vector_at(*linked_blocks, i);
             rvjit_linker_patch_jmp(jptr, ((size_t)dest) - ((size_t)jptr));
+#ifndef RVJIT_GLOBAL_ICACHE_FLUSH
+            rvjit_flush_icache(jptr, 8);
+#endif
         }
         vector_free(*linked_blocks);
         free(linked_blocks);
diff --git a/src/rvjit/rvjit_arm64.h b/src/rvjit/rvjit_arm64.h
index ed01f45..ea2b6bb 100644
--- a/src/rvjit/rvjit_arm64.h
+++ b/src/rvjit/rvjit_arm64.h
@@ -1343,7 +1343,6 @@ static inline void rvjit_patch_ret(void* addr)
 static inline bool rvjit_patch_jmp(void* addr, int32_t offset)
 {
     if (rvjit_a64_valid_reloc(offset)) {
-        write_uint32_le_m(addr, 0);
         rvjit_a64_b_reloc(addr, offset);
         return true;
     }
-- 
2.46.0

